custom: 
  service: ${file(env.yml):service}
  awsProfile: ${file(env.yml):awsProfile}
  awsTagName: ${file(env.yml):awsTagName}
  slackUrl: ${file(env.yml):${opt:stage, 'dev'}.slackUrl}
  assetHostName: ${file(env.yml):${opt:stage, 'dev'}.assetHostName}
  pinitJsPath: ${file(env.yml):${opt:stage, 'dev'}.pinitJsPath}
  pinitMainJsPath: ${file(env.yml):${opt:stage, 'dev'}.pinitMainJsPath}
  s3Bucket: ${file(env.yml):${opt:stage, 'dev'}.s3Bucket}
  s3Region: ${file(env.yml):${opt:stage, 'dev'}.s3Region}
  s3AccessKeyId: ${file(env.yml):${opt:stage, 'dev'}.s3AccessKeyId}
  s3SecretAccessKey: ${file(env.yml):${opt:stage, 'dev'}.s3SecretAccessKey}

service: ${self:custom.service}

frameworkVersion: ">=1.32.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.region}
  memorySize: 512
  timeout: 30
  profile: ${self:custom.awsProfile} # aws named profile
  stage: ${opt:stage, 'dev'} # `sls deploy --stage production` if --stage is provided, else use dev
  stackTags: # Optional CF stack tags
    Name: ${self:custom.awsTagName}
    Stage: ${opt:stage, 'dev'}
  environment:
    slackUrl: ${self:custom.slackUrl}
    slackChannel: ${self:custom.slackChannel}
    assetHostName: ${self:custom.assetHostName}
    pinitJsPath: ${self:custom.pinitJsPath}
    pinitMainJsPath: ${self:custom.pinitMainJsPath}
    s3Bucket: ${self:custom.s3Bucket}
    s3Region: ${self:custom.s3Region}
    s3AccessKeyId: ${self:custom.s3AccessKeyId}
    s3SecretAccessKey: ${self:custom.s3SecretAccessKey}

functions:
  pinterest:
    handler: pinterest.call
    events:
      - schedule: rate(1 day)
      # uncomment for development
      # - http:
      #     path: '/test'
      #     method: get
      #     cors: true

plugins:
  - serverless-offline